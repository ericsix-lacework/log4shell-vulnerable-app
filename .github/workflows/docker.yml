
name: GitHub Actions Demo -  Log4J 

on:
  push:
  pull_request:
    
jobs:
    build:
        # ...
        runs-on: ubuntu-latest

        steps:

         - name: Check out the repo
           uses: actions/checkout@v2

         - name: Get short SHA
           run: echo "GHA_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV

         - name: Build
           uses: docker/build-push-action@v2
           with:
             tags: ericsixlacework/vulnerable-app:${{ env.GHA_SHA }},ericsixlacework/vulnerable-app:latest
             load: true

         - uses: lacework/lw-scanner-action@v0.6.0
           name: Scan container images for vulnerabitilies using Lacework
           with:
                LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }} 
                LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
                IMAGE_NAME: ericsixlacework/vulnerable-app 
                IMAGE_TAG: ${{ env.GHA_SHA }}
                SAVE_RESULTS_IN_LACEWORK: true
                SAVE_BUILD_REPORT: true
                BUILD_REPORT_FILE_NAME: myreport.html
                FAIL_BUILD: false
                SEVERITY_THRESHOLD: fixable 

         - name: Login to DockerHub
           uses: docker/login-action@v1
           with:
             username: ${{ secrets.DOCKERHUB_USERNAME }}
             password: ${{ secrets.DOCKERHUB_TOKEN }}

         - name: tag and push
           uses: docker/build-push-action@v2
           with:
             push: true
             tags: ericsixlacework/vulnerable-app:${{ env.GHA_SHA }},ericsixlacework/vulnerable-app:latest

         - name: Configure AWS credentials
           uses: aws-actions/configure-aws-credentials@v1
           with:
             aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
             aws-region: us-west-2

         - name: deploy to cluster
           uses: kodermax/kubectl-aws-eks@master
           env:
             KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
           with:
             args: set image deployment/vulnerable-app vulnerable-app=ericsixlacework/vulnerable-app:${{ env.GHA_SHA }} -n lacework

         - name: verify deployment
           uses: kodermax/kubectl-aws-eks@master
           env:
             KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
           with:
             args: rollout status deployment/vulnerable-app -w -n lacework
